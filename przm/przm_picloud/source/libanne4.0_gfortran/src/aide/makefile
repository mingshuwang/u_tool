# Makefile for library - aide

include ../make.inc

#
# History:  95/12/05 kmflynn
#           96/12/10 kmflynn - modified to include/exclude mouse option
#           99/07/30 kmflynn

# Usage:  make [libdir=path_to_install_to] [install] [| tee makeout]
#
# Examples:  make
#            make install libdir=/usr/lib
#            make install libdir=$HOME/lib

ObjVrsn = $(ObjUnix)        # source Obj[Unix, Vax]
FFVrsn  = $(FFUnix)         # Version FF[Unix, AIX]
SymTbl  = $(BSD)            # symbol table (BSD or SYS_V)

#*******************************************************************
#*****   Some things may need to be changed below this line.   *****
#*******************************************************************

# Compiler flags
#    C - check subranges and array bounds
#    u - default data type for undeclareds is undefined
#    g - generate source level symbolic debug information
# ansi - compile in accordance with rules for ANSI C, flag violations
#    O - optimization
# (NOTES: to generate debug code - set FFLAGS to Dbgf
#            for production code - set FFLAGS to OptM
DbgF   = -u -C -g
OptM   = -u -O

# compile options, use Unix for default
FFUnix =
FFAIX  = -qxlf77=leadzero        # force leading zero on output

# symbol table for library archive may need to be explicitly built;
# System V ar does this automatically (DG and AIX)
# BSD ar does not (Sun)
BSD    = ranlib $@
SYS_V  = @echo
#        note:  some makes have a problem with SYS_V being blank,
#               use an empty echo.

# library archive options
#    r - replace the named files in the archive file
#    v - give a verbose file-by-file description of the making
#    c - suppress the message that is produced by default when
#        the archive file is created
#    q - quickly append the named files to the end of the
#        archive file
ArOpt = rv

# this description file uses the Bourne shell
SHELL = /bin/sh

# build library with or without mouse option
Mouse_yes = _m
Mouse_no  =
Mouse     = $(Mouse_no)

# Object files, installation specific
# where zsys[dg vx pc].o
ObjUnix = zsysdg.o
ObjVax  = zxyxvx.o

#*******************************************************************
#***** You should not need to modify anything below this line. *****
#*******************************************************************

library = aide$(Mouse)lib.a
Objects = aninit$(Mouse).o  qtchar.o qtfile.o qtnumb.o \
          qtnums.o prtaid.o qtscn1.o utmisc$(Mouse).o  utuprm.o \
          z0util$(Mouse).o  z1util.o z4util$(Mouse).o  ztscn1.o \
          zutil$(Mouse).o   zutilx.o zutily$(Mouse).o  qtstgt.o zclbak.o \
          zcbch1.o zcbch2.o zcbch3.o zcbch4.o zcbch5.o \
          zcbch6.o zcbch7.o zcbch8.o zcbch9.o \
          zcbfl1.o zcbfl2.o zcbfl3.o zcbfl4.o zcbfl5.o \
          zcbfl6.o zcbfl7.o zcbfl8.o zcbfl9.o \
          zcbex1.o zcbex2.o zcbex3.o zcbex4.o zcbex5.o \
          zcbex6.o zcbex7.o zcbex8.o zcbex9.o
Sutil   = const.inc color.inc
Sadwdm  = cclbak.inc cqrsp.inc  cscren.inc czglvl.inc \
          czhide.inc czoptn.inc fmsgwd.inc pmxfld.inc pmxrsl.inc zcntrl.inc

libdir  = ../../lib
binary  = ../../lib
libMake = $(binary)/$(library)
libInst = $(libdir)/$(library)

# Rules
all: includes $(binary) $(libMake) install
	@echo "***"
	@echo "*** Done making all for aide, files are now up-to-date."
	@echo "***"

# Library and utility dependencies:
$(libMake):   $(Objects) $(ObjVrsn)
	@echo "***"
	@echo "*** making $(libMake)"
	@echo "***"
	ar $(ArOpt) $@ $?
	$(SymTbl)
$(binary):
	@if [ ! -d $(binary) ]   ; then             \
	   mkdir $(binary)  ;                       \
	   echo "*** Created directory $(binary)" ; \
	fi
install:
# Create directory for binary file, if necessary
	@if [ ! -d $(libdir) ]   ; then             \
	   mkdir $(libdir) ;                        \
	   echo "*** Created directory $(libdir)" ; \
	fi
# Link executable to libdir if installing elsewhere
	@if [ ! -s $(libMake) ] ; then                                   \
	   echo "*** library $(libMake) does not exist," ;               \
	   echo "*** use one of the following commands to generate it:"; \
	   echo "***     make" ;  echo "***     make all" ;              \
	else                                                             \
	   if [ $(libdir) != $(binary) ] ; then                          \
	      rm -f $(libInst) ;                                         \
	      cd ../..; ln -s `pwd`/lib/$(library) $(libInst);           \
	      cd ./src/aide ;                                            \
	      echo "*** Library $(libInst) has been updated.";           \
	   fi ;                                                          \
	fi
clean:
	@if [ $(libdir) != $(binary) ] ; then rm -f $(libInst) ; fi
	@rm -f *.o $(libMake)
	@echo "***"
	@echo "*** Removed files generated by make for aide."
	@echo "***"
includes:
	@for inc in $(Sutil) ; do                                           \
	   if [ -f $$inc ] ; then                                           \
	     if diff $$inc ../util/$$inc ; then                             \
	        continue ;                                                  \
	     else                                                           \
	        echo "*** NOTICE:--different $$inc appended to ERROR.inc" ; \
	        echo "***";                                                 \
	        echo "***          different $$inc, `date`" >> ERROR.inc ;  \
	        cat $$inc >> ERROR.inc ;                                    \
	        rm $$inc ;                                                  \
	        cp ../util/$$inc . ;                                        \
	     fi ;                                                           \
	   else                                                             \
	     echo "*** NOTICE:--copying missing $$inc from ../util" ;       \
	     cp ../util/$$inc . ;                                           \
	   fi ;                                                             \
	done
	@for inc in $(Sadwdm) ; do                                          \
	   if [ -f $$inc ] ; then                                           \
	     if diff $$inc ../adwdm/$$inc ; then                            \
	        continue ;                                                  \
	     else                                                           \
	        echo "*** NOTICE:--different $$inc appended to ERROR.inc" ; \
	        echo "***" ;                                                \
	        echo "***          different $$inc, `date`" >> ERROR.inc ;  \
	        cat $$inc >> ERROR.inc ;                                    \
	        rm $$inc ;                                                  \
	        cp ../adwdm/$$inc . ;                                       \
	     fi ;                                                           \
	   else                                                             \
	     echo "*** NOTICE:--copying missing $$inc from ../adwdm" ;      \
	     cp ../adwdm/$$inc . ;                                          \
	   fi ;                                                             \
	done

# Define object file dependencies:
aninit.o:   cterif.inc faidep.inc fversn.inc fmsgwd.inc
qtchar.o:   pmesfl.inc cscren.inc cqrsp.inc  pmxfld.inc zcntrl.inc pmxrsl.inc
qtfile.o:   pmesfl.inc zcntrl.inc pmxrsl.inc
qtnumb.o:   cscren.inc pmxfld.inc zcntrl.inc pmxrsl.inc
qtscn1.o:   pmesfl.inc color.inc  cqrsp.inc  cscren.inc pmxfld.inc \
            zcntrl.inc pmxrsl.inc
qtstgt.o:   const.inc  cscren.inc czhide.inc czoptn.inc zcntrl.inc \
            pmxrsl.inc pmxfld.inc
utmisc.o:   cterif.inc cscren.inc zcntrl.inc pmxrsl.inc pmxfld.inc
utuprm.o:   cusrpm.inc pmesfl.inc pmxprm.inc faidep.inc
z0util.o:   const.inc  cscren.inc czhide.inc czoptn.inc cclbak.inc \
            zcntrl.inc pmxrsl.inc pmxfld.inc
z1util.o:   cscren.inc zcntrl.inc pmxrsl.inc pmxfld.inc
z4util.o:   cqrsp.inc  zcntrl.inc pmxrsl.inc
zclbak.o:   cclbak.inc
ztscn1.o:   const.inc  cscren.inc zcntrl.inc pmxrsl.inc pmxfld.inc
zutil.o:    faidep.inc const.inc  color.inc  cqrsp.inc  cscren.inc czhide.inc \
            czoptn.inc zcntrl.inc pmxrsl.inc czglvl.inc pmxfld.inc
zutilx.o:   faidep.inc const.inc  czhide.inc czoptn.inc cscren.inc \
            cqrsp.inc  zcntrl.inc pmxrsl.inc pmxfld.inc
zutily.o:   zcntrl.inc pmxrsl.inc

aninit_m.o: cterif.inc faidep.inc fversn.inc fmsgwd.inc
utmisc_m.o: cterif.inc cscren.inc zcntrl.inc pmxrsl.inc pmxfld.inc
z0util_m.o: const.inc  cscren.inc czhide.inc czoptn.inc cclbak.inc \
            zcntrl.inc pmxrsl.inc pmxfld.inc
z4util_m.o: cqrsp.inc  zcntrl.inc pmxrsl.inc
zutil_m.o:  faidep.inc const.inc  color.inc  cqrsp.inc  cscren.inc czhide.inc \
            czoptn.inc zcntrl.inc pmxrsl.inc czglvl.inc pmxfld.inc
zutily_m.o: zcntrl.inc pmxrsl.inc pmxfld.inc cqrsp.inc  cscren.inc

zsyspc.o:   zcntrl.inc pmxrsl.inc

# end of make
